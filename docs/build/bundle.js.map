{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../src/timer-store.js","../../src/utils.js","../../src/time-input-mask.js","../../src/Countdown.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value' || descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j];\n                if (attributes[attribute.name]) {\n                    j++;\n                }\n                else {\n                    node.removeAttribute(attribute.name);\n                }\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    if (value != null || input.value) {\n        input.value = value;\n    }\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', `display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ` +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    let unsubscribe;\n    if (is_crossorigin()) {\n        iframe.src = `data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>`;\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        detach(iframe);\n        if (unsubscribe)\n            unsubscribe();\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(html, anchor = null) {\n        this.e = element('div');\n        this.a = anchor;\n        this.u(html);\n    }\n    m(target, anchor = null) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(target, this.n[i], anchor);\n        }\n        this.t = target;\n    }\n    u(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    p(html) {\n        this.d();\n        this.u(html);\n        this.m(this.t, this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next, lookup.has(block.key));\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if ($$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.22.2' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe,\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable, derived, get } from 'svelte/store';\n\nconst configStorageKey = 'cyclic-timer-config';\n\nconst _config = writable(loadConfig());\n\nconst currentIdx = writable(null);\n\nlet interval = writable(null);\n\nexport const running = derived(interval, i => !!i);\nexport const started = derived(currentIdx, idx => idx != null);\n\nlet currentSetter = null;\n\nexport const current = derived([_config, currentIdx], ([config, idx], set) => {\n  currentSetter = set;\n  if (!config.length) return set(null);\n  const realIdx = idx % config.length;\n  const item = idx != null && config[realIdx];\n  if (!item) return set(null);\n  set({...item, timeLeft: item.time, index: realIdx});\n});\n\nexport const round = derived([_config, currentIdx], ([config, idx]) => {\n  return idx != null && config.length ? Math.floor(idx / config.length) + 1 : 0;\n});\n\nexport const config = {\n  subscribe: _config.subscribe,\n  set: value => {\n    stop();\n    _config.set(value);\n    saveConfig(value);\n  },\n  update: updater => config.set(updater(get(_config))),\n};\n\nconst cancelInterval = () => {\n  const $interval = get(interval);\n  if (!$interval) return;\n  clearInterval($interval);\n  interval.set(null);\n}\n\nconst iterate = () => {\n  let currentItem = get(current);\n  if (!currentItem) return cancelInterval();\n  if (currentItem.timeLeft-- <= 0) {\n    currentIdx.update(idx => ++idx);\n  } else {\n    currentSetter(currentItem);\n  }\n};\n\nexport const start = (restart = true) => {\n  if (get(running)) return;\n  if (restart) {\n    currentIdx.set(null);\n    currentIdx.set(0);\n  }\n  interval.set(setInterval(iterate, 1000));\n};\n\nexport const stop = () => {\n  pause();\n  currentIdx.set(null);\n}\n\nexport const pause = () => {\n  cancelInterval();\n}\n\nfunction loadConfig() {\n  let config = null;\n  try {\n    config = JSON.parse(localStorage.getItem(configStorageKey));\n  } catch (e) {\n    console.error(e);\n  }\n  return config || [];\n}\n\nfunction saveConfig(config) {\n  localStorage.setItem(configStorageKey, JSON.stringify(config));\n}\n","export const formatTime = time => {\n  if (time < 0) return ':';\n  let mins = Math.floor(time / 60);\n  let secs = time % 60;\n  return `${mins < 10 ? `0${mins}` : mins}:${secs < 10 ? `0${secs}` : secs}`;\n};\n\nexport const parseTime = timeString => {\n  const [mins, secs] = timeString.split(':');\n  const parsed = parseInt(mins) * 60 + parseInt(secs);\n  return isNaN(parsed) ? 0 : parsed;\n};\n\nexport const inputValueWrapper = (converter, initial = null) => {\n  let value = initial;\n  let _value$ = converter.string(initial);\n  return {\n    get value() {\n      return value;\n    },\n    set value(val) {\n      value = val;\n      _value$ = converter.string(val);\n    },\n    get value$() {\n      return _value$;\n    },\n    set value$(str) {\n      value = converter.value(str);\n      _value$ = str;\n    },\n  };\n};\n\nexport const timeInputValue = initial => inputValueWrapper({\n  string: formatTime,\n  value: parseTime,\n}, initial);\n","export const timeInputMask = (el) => {\n\n  el.addEventListener('keydown', moveCursor);\n  el.addEventListener('beforeinput', beforeInput);\n  el.addEventListener('input', input);\n\n  return {\n    destroy: () => {\n      el.removeEventListener('keydown', moveCursor);\n      el.addEventListener('beforeinput', beforeInput);\n      el.addEventListener('input', input);\n    },\n  };\n};\n\nconst formatRe = /^\\d{2}:\\d{2}$/;\nconst colonPos = 2;\nconst prevValue = Symbol('prevValue');\n\nfunction moveCursor(e) {\n  if (e.key === 'ArrowLeft' && this.selectionStart === colonPos + 1) {\n    this.selectionStart = this.selectionEnd = colonPos;\n  }\n  if (e.key === 'ArrowRight' && this.selectionStart === colonPos - 1) {\n    this.selectionStart = this.selectionEnd = colonPos;\n  }\n}\n\nfunction beforeInput(e) {\n  let val = this[prevValue] = this.value;\n  //console.log('beforeInput', e, val);\n  if (e.inputType === 'insertText') {\n    val = val.slice(0, this.selectionStart) + e.data + val.slice(this.selectionStart + 1);\n    if (formatRe.test(val)) {\n      // select digit to get replaced\n      this.selectionEnd = this.selectionStart + 1;\n    } else {\n      e.preventDefault();\n    }\n  } else if (e.inputType === 'deleteContentBackward') {\n    let start = this.selectionStart;\n    if (start === colonPos) return;\n    this.value = val.slice(0, start) + '0' + val.slice(start + 1);\n  }\n}\n\nfunction input(e) {\n  let val = this.value;\n  //console.log('input', e, val, this.selectionStart);\n  if (!formatRe.test(val)) {\n    this.value = this[prevValue];\n  }\n  if (this.selectionStart === colonPos) {\n    this.selectionStart = this.selectionEnd = colonPos + 1;\n  }\n}\n\n","<script>\n  import {formatTime} from './utils';\n\n  export let time = 0;\n\n  $: format = formatTime(time);\n</script>\n\n<style>\n  div {\n    font-size: 3em;\n    text-align: center;\n    font-variant-numeric: tabular-nums;\n  }\n</style>\n\n<div>\n  {format}\n</div>","<script>\n  import {\n    config,\n    start,\n    stop,\n    pause,\n    current,\n    running,\n    started,\n    round\n  } from \"./timer-store\";\n  import { formatTime, timeInputValue } from \"./utils\";\n  import { timeInputMask } from './time-input-mask'\n  import Countdown from \"./Countdown.svelte\";\n\n  let video;\n\n  if (!($config && $config.length)) {\n    $config = [{ name: \"action\", time: 60 }, { name: \"break\", time: 15 }];\n  }\n\n  const createInputs = () => $config.map(c => ({\n    name: c.name,\n    time: timeInputValue(c.time)\n  }));\n\n  let configInputs = createInputs();\n\n  $: timeLeft = $current ? $current.timeLeft : -1;\n  $: currentIndex = $current && $current.index;\n\n  $: {\n    if (timeLeft < 4 && timeLeft > 0) {\n      new Audio('sound/beep-ping.mp3').play();\n    } else if (timeLeft === 0) {\n      new Audio('sound/horn-honk.mp3').play();\n    }\n  }\n\n  $: {\n    if (currentIndex != null) {\n      new Audio('sound/electronic-chime.mp3').play();\n    }\n  }\n\n  const onStart = () => {\n    if ($started && $running) {\n      video.pause();\n      return pause();\n    }\n\n    // update config\n    if (!$started) {\n      $config = configInputs.map(input => ({\n        name: input.name,\n        time: input.time.value\n      }));\n      configInputs = createInputs();\n    }\n    video.play();\n    start(!$started);\n  };\n\n  const onStop = () => {\n    video.pause();\n    stop();\n  };\n\n  const removeConfig = idx => {\n    configInputs = configInputs.filter((_, i) => idx !== i);\n  };\n\n  const addConfig = () => {\n    configInputs = [...configInputs, { name: \"new\", time: timeInputValue(10) }];\n  };\n\n  let screenWidth = 250;\n\n  $: scale = screenWidth / 250;\n\n</script>\n\n<style>\n  main {\n    display: flex;\n    align-content: center;\n    flex-direction: column;\n    height: 100%;\n    max-height: 100%;\n    overflow: auto;\n  }\n\n  main > div {\n    flex: 0 0 auto;\n    text-align: center;\n    width: 250px;\n    padding: 20px;\n    margin: 0 auto;\n    transform-origin: top;\n    box-sizing: border-box;\n  }\n\n  .round {\n    font-size: 1.5em;\n    margin: .25em 0;\n  }\n\n  .input-row {\n    display: flex;\n  }\n  .input-row input {\n    border: none;\n    border-bottom: 1px solid lightgray;\n    padding: 0 5px;\n    margin: 0;\n    background: transparent;\n  }\n  .input-row input:read-only {\n    border: none;\n  }\n  .input-row input.time {\n    flex: 0 0 auto;\n    text-align: right;\n    width: 3.2em;\n    font-variant-numeric: tabular-nums;\n  }\n  .input-row input.name {\n    flex: 1 1 auto;\n    width: 0;\n  }\n  .input-row.active {\n    background-color: lightgray;\n  }\n\n  .started .input-row button {\n    visibility: hidden;\n  }\n\n  .started .add {\n    visibility: hidden;\n  }\n\n  button {\n    background: transparent;\n    border: none;\n    margin: 0;\n  }\n  button > img {\n    width: 24px;\n    height: 24px;\n  }\n\n  video {\n    display: none;\n  }\n</style>\n\n<main bind:offsetWidth={screenWidth}>\n  <div class:running={$running} class:started={$started} style=\"transform: scale({scale});\">\n    <div class=\"buttons\">\n      <button on:click={onStart}>\n        {#if $running}\n          <img src=\"images/pause.svg\" alt=\"pause\" />\n        {:else}\n          <img src=\"images/play.svg\" alt=\"play\" />\n        {/if}\n      </button>\n      <button on:click={onStop}>\n        <img src=\"images/stop.svg\" alt=\"stop\" />\n      </button>\n    </div>\n    <div class=\"round\">Round: {$round}</div>\n    <Countdown time={timeLeft} />\n    {#each configInputs as item, idx (item)}\n      <div class=\"input-row\" class:active={idx === currentIndex}>\n        <input bind:value={item.time.value$} use:timeInputMask readonly={$started} class=\"time\" />\n        <input bind:value={item.name} readonly={$started} class=\"name\" />\n        <button on:click={() => removeConfig(idx)}>\n          <img src=\"images/remove.svg\" alt=\"remove\" />\n        </button>\n      </div>\n    {/each}\n    <div class=\"add\">\n      <button on:click={addConfig}>\n        <img src=\"images/add.svg\" alt=\"add\" />\n      </button>\n    </div>\n  </div>\n</main>\n<video bind:this={video} loop muted playsinline>\n  <source src=\"video/blank.m4v\">\n  <source src=\"video/blank.ogv\" type=\"video/ogg\">\n  <source src=\"video/blank.webm\" type=\"video/webm\">\n</video>\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.body,\n});\n\nexport default app;"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","get_store_value","value","_","component_subscribe","component","callback","$$","on_destroy","push","set_store_value","ret","set","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","set_data","set_input_value","input","set_style","key","important","style","setProperty","crossorigin","current_component","add_resize_listener","computed_style","getComputedStyle","z_index","parseInt","zIndex","position","iframe","tabIndex","undefined","window","parent","error","is_crossorigin","src","onload","contentWindow","source","toggle_class","toggle","classList","set_current_component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","i","length","update","pop","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","transition_in","block","local","delete","destroy_block","lookup","d","mount_component","on_mount","m","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","context","Map","ready","rest","hydrate","nodes","Array","from","childNodes","children","l","c","intro","SvelteComponent","[object Object]","this","$destroy","type","index","indexOf","splice","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","s","invalidate","subscriber","derived","stores","initial_value","single","isArray","stores_array","auto","readable","inited","values","pending","cleanup","sync","result","unsubscribers","_config","config","JSON","parse","localStorage","getItem","e","console","loadConfig","currentIdx","interval","running","started","idx","currentSetter","current","realIdx","item","timeLeft","time","round","Math","floor","setItem","stringify","saveConfig","updater","get","cancelInterval","$interval","clearInterval","iterate","currentItem","pause","formatTime","mins","secs","parseTime","timeString","split","parsed","isNaN","timeInputValue","initial","converter","_value$","string","val","value$","str","inputValueWrapper","timeInputMask","el","moveCursor","beforeInput","destroy","formatRe","prevValue","Symbol","colonPos","selectionStart","selectionEnd","inputType","slice","test","preventDefault","format","action_result","old_blocks","get_key","dynamic","list","create_each_block","next","get_context","o","n","old_indexes","new_blocks","new_lookup","deltas","child_ctx","abs","will_move","did_move","first","new_block","old_block","new_key","old_key","outros","video","$config","createInputs","configInputs","removeConfig","screenWidth","$current","currentIndex","Audio","play","scale","$started","$running","restart","setInterval","body"],"mappings":"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"}